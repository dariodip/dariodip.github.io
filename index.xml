<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dario Di Pasquale</title>
    <link>/</link>
    <description>Recent content on Dario Di Pasquale</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 13 Mar 2021 16:10:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Sun, 02 Mar 2025 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>About me (long version) I am curious and passionate about my job, always eager to learn and solve new problems. I spend a lot of time learning new things, such as technologies and patterns, to stay up-to-date with current trends. However, my main passion is computer science, and I read many books and articles about software engineering.
In my free time, I enjoy traveling, reading books, rock climbing, trekking, listening to music, and watching movies and TV series.</description>
    </item>
    
    <item>
      <title>Books on my journey</title>
      <link>/posts/2021/03/books-on-my-journey/</link>
      <pubDate>Sat, 13 Mar 2021 16:10:00 +0000</pubDate>
      
      <guid>/posts/2021/03/books-on-my-journey/</guid>
      <description>This page has been migrated to Medium In this post I will write down a list of technical books, articles and podcast that I find interesting. I hope that someone will find it interesting as for me.
Not all the books I&amp;rsquo;ve read are listed here, only the ones I would like to suggest.
Technical Books I&amp;rsquo;ve read Designing Data-Intensive Applications This book is the one you MUST read if work with data.</description>
    </item>
    
    <item>
      <title>Ansible for developers 102</title>
      <link>/posts/2020/03/ansible-for-developers-102/</link>
      <pubDate>Fri, 27 Mar 2020 15:11:00 +0000</pubDate>
      
      <guid>/posts/2020/03/ansible-for-developers-102/</guid>
      <description>Introduction This page has been migrated to Medium In the previous post we introduced basic aspects of Ansible. Now we&amp;rsquo;ll talk about some advanced features.
Loops Another way to describe the tools of the Ansible family can be Infrastructure as code. This is the process of managing and provisioning computer data centers through machine-readable definition files, rather than physical hardware configuration or interactive configuration tools.
The word code brings an important aspect with it: loops.</description>
    </item>
    
    <item>
      <title>Ansible for developers 101</title>
      <link>/posts/2020/03/ansible-for-developers-101/</link>
      <pubDate>Fri, 27 Mar 2020 09:11:00 +0000</pubDate>
      
      <guid>/posts/2020/03/ansible-for-developers-101/</guid>
      <description>Introduction This page has been migrated to Medium When I started as a developer and I started to feel frustrating when I had to repeat something twice or more.
Being a developer does not mean you only have to write code. Hopefully, your code should be executed in different environments and often it is up to you managing part of those environments.
Nowadays automation brings a lot of improvements to the life-quality of developers.</description>
    </item>
    
    <item>
      <title>Data structures with Go - Part II</title>
      <link>/posts/2020/01/data-structures-with-go-part-ii/</link>
      <pubDate>Fri, 10 Jan 2020 17:05:35 +0000</pubDate>
      
      <guid>/posts/2020/01/data-structures-with-go-part-ii/</guid>
      <description>Data Structures With Go - Part II This page has been migrated to Medium In the previous post we discussed how to implement linear data structures with Go.
Now we will explore two more complex data structures: tree and graph.
Those structures are not Linear and can represent unstructured information. Both graphs and trees are the foundation of the graph theory and both can be used, essentially, to describe a kind of relation.</description>
    </item>
    
    <item>
      <title>Data structures with Go - Part I</title>
      <link>/posts/2020/01/data-structures-with-go-part-i/</link>
      <pubDate>Fri, 03 Jan 2020 17:05:35 +0000</pubDate>
      
      <guid>/posts/2020/01/data-structures-with-go-part-i/</guid>
      <description>Data Structures With Go - Part I This page has been migrated to Medium Data structures are everywhere. Every developer should know them, starting from the most common ones.
The data structure priorly describes how the data is organised, accessed, associated and processed.
Using data structures you can keep your data in memory and efficiently access them.
You should pick the data structure that is the most suitable for your purposes to minimize space in memory and access time.</description>
    </item>
    
    <item>
      <title>Binary Search with Go, Python and C</title>
      <link>/posts/2019/12/binary-search-with-go-python-and-c/</link>
      <pubDate>Sun, 01 Dec 2019 17:05:35 +0000</pubDate>
      
      <guid>/posts/2019/12/binary-search-with-go-python-and-c/</guid>
      <description>The Binary Search Algorithm This page has been migrated to Medium The Binary Search Algorithm is a search algorithm that works for sorted collections (e.g. sorted arrays). It takes as input a collection, the length of that collection and an element to find, and gives as output the index of the element in the collection (if it exists).
This algorithm is as efficient as easy to learn due to its simplicity.</description>
    </item>
    
    <item>
      <title>Go Workshop 2019 References</title>
      <link>/gows/goref2019/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/gows/goref2019/</guid>
      <description>Go Language Tutorial https://golang.org (official website) https://go-tour-ita.appspot.com/welcome/1 (an interactive tour through Go) http://www.golangbootcamp.com/ (comprehensive Go tutorial) https://blog.golang.org/ (official blog) https://golangcode.com/ (a library of useful Go snippets) https://golangbot.com/ (tutorials for beginners) https://appliedgo.net/ (tutorials and explanations for advanced users) https://changelog.com/gotime (Go podcast) https://dave.cheney.net/category/golang (another blog of Go) https://golang.ch/ (Go news, libraries and tutorials) https://www.golangprograms.com/ (Go blog and tutorials for mid-advanced users) https://medium.com/@trevor4e/learning-gos-concurrency-through-illustrations-8c4aff603b3 (clear explanation about Go concurrency) https://awesome-go.com/ (a list of Go frameworks and libraries) https://medium.</description>
    </item>
    
    <item>
      <title>Portfolio</title>
      <link>/portfolio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/portfolio/</guid>
      <description>Software Engineer @ Prima Assicurazioni Remote (Italy) Jan 2023 - Present I am an Engineering Manager for the Claims Data Management and Claims Antifraud Engineering Teams at Prima Assicurazioni. My teams are responsible for implementing solutions for data management related to Claims Domain, following the principles of Data Mesh and for applying AI/ML model for fraud and anomaly detection. We primarily use Python, Spark, Neptune, Databricks, Redshift, and Elixir.
Additionally, I am mentoring other Engineering Managers for topics related to Agile and Scrum.</description>
    </item>
    
  </channel>
</rss>
